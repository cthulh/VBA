Sub main_sub()
Dim lastrow As Long, x As Long, y As Long, z As Long, k As Long, L As Long, j As Long
Dim accountnum As String, accountdesc As String, codeprod As String, codedesc As String, tempstr As String, resoncode As String, resondesc As String
Dim ztdaarr() As Variant, arrayy() As Variant

    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual

If Sheet7.Cells(1, 1).Value = vbNullString Or Sheet19.Cells(1, 1).Value = vbNullString Then
    MsgBox ("There is no data.")
    Exit Sub
End If
    

lastrow = Cells(Rows.Count, 1).End(xlUp).Row

    Columns("A:A").Select
    ActiveWorkbook.Worksheets("Download").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Download").Sort.SortFields.Add Key:=Range("A1"), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("Download").Sort
        .SetRange Range("A1:A" & lastrow)
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    For x = 1 To lastrow
    
        If Right(Left(Cells(x, 1).Value, 5), 1) = "." Then
        Else
            Rows(x).ClearContents
        End If
    
    Next x
    
    Columns("A:A").Select
    ActiveWorkbook.Worksheets("Download").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Download").Sort.SortFields.Add Key:=Range("A1"), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("Download").Sort
        .SetRange Range("A1:A" & lastrow)
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    Call text_to_columns
    
    Columns("A:A").ColumnWidth = 10
    Columns("M:M").Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Columns("P:P").Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    
    On Error GoTo skip
    Range("B2").TextToColumns Destination:=Range("B2"), DataType:=xlDelimited, _
    TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
    Semicolon:=False, Comma:=False, Space:=False, Other:=False
    
    With Sheet7
        .Activate
        
        Call text_to_columns
        
        .Cells.EntireColumn.AutoFit
        .Columns("A:A").ColumnWidth = 12
        
        lastrow = .Cells(Rows.Count, 2).End(xlUp).Row
        arrayy = .Range("B4:J" & lastrow)
    
    End With
    
    Sheet19.Activate
    
    lastrow = Cells(Rows.Count, 2).End(xlUp).Row
    
    ReDim ztdaarr(1 To lastrow, 0 To 10) As Variant

    For y = 1 To lastrow
    On Error GoTo nexxt
            
        tempstr = Cells(y, 14).Value
        Cells(y, 14).Value = Replace(tempstr, "-", vbNullString)
                
        tempstr = Cells(y, 17).Value
        Cells(y, 17).Value = Replace(tempstr, "-", vbNullString)
    
        tempstr = Trim(Cells(y, 12).Value)
        If InStr(tempstr, " ") > 0 Then
            accountnum = Mid(tempstr, 1, InStr(tempstr, " ") - 1)
            accountdesc = Trim(Mid(tempstr, InStr(tempstr, " ") + 1, Len(tempstr) - InStr(tempstr, " ")))
            Cells(y, 12).Value = accountnum
            Cells(y, 13).Value = accountdesc
        End If

        tempstr = Trim(Cells(y, 15).Value)
        If InStr(tempstr, " ") > 0 Then
            codeprod = Mid(tempstr, 1, InStr(tempstr, " ") - 1)
            codedesc = Trim(Mid(tempstr, InStr(tempstr, " ") + 1, Len(tempstr) - InStr(tempstr, " ")))
            Cells(y, 15).Value = codeprod
            Cells(y, 16).Value = codedesc
        End If
        
        tempstr = Trim(Cells(y, 19).Value)
        If InStr(tempstr, " ") > 0 Then
            reasoncode = Mid(tempstr, 1, InStr(tempstr, " ") - 1)
            reasondesc = Trim(Mid(tempstr, InStr(tempstr, " ") + 1, Len(tempstr) - InStr(tempstr, " ")))
            Cells(y, 19).Value = reasoncode
            Cells(y, 20).Value = reasondesc
        End If
        
        ztdaarr(y, 0) = Trim(Cells(y, 2).Value)
        ztdaarr(y, 1) = Cells(y, 3).Value
        ztdaarr(y, 2) = Cells(y, 4).Value
        ztdaarr(y, 4) = Cells(y, 12).Value
        ztdaarr(y, 5) = Cells(y, 13).Value
        ztdaarr(y, 6) = Cells(y, 14).Value
        ztdaarr(y, 7) = Cells(y, 15).Value
        ztdaarr(y, 8) = Cells(y, 16).Value
        ztdaarr(y, 9) = Cells(y, 17).Value
        ztdaarr(y, 10) = Cells(y, 19).Value
        
        'fetching chamber number
        'SUPER SLOW
        'TO DO: MAKE FASTER !!!!!

        For L = 1 To UBound(arrayy, 1)
        
            If arrayy(L, 2) = ztdaarr(y, 0) And arrayy(L, 4) = ztdaarr(y, 4) And arrayy(L, 6) = ztdaarr(y, 7) Then
            
                ztdaarr(y, 3) = arrayy(L, 9)
                
            End If
        
        Next L
        
nexxt:
    Next y
    
    Cells.EntireColumn.AutoFit
    
    
    With Sheet6
    
        lastrow = .Cells(Rows.Count, 2).End(xlUp).Row
        If lastrow > 3 Then
            .Range(.Cells(3, 2), .Cells(lastrow, 17)).ClearContents
        End If
    
        For k = 1 To UBound(ztdaarr, 1)
        
            .Cells(k + 2, 2).Value = ztdaarr(k, 0)
            .Cells(k + 2, 3).Value = ztdaarr(k, 1)
            .Cells(k + 2, 4).Value = ztdaarr(k, 2)
            .Cells(k + 2, 5).Value = ztdaarr(k, 3)
            .Cells(k + 2, 6).Value = ztdaarr(k, 4)
            .Cells(k + 2, 7).Value = ztdaarr(k, 5)
            .Cells(k + 2, 8).Value = ztdaarr(k, 6)
            .Cells(k + 2, 9).Value = ztdaarr(k, 7)
            .Cells(k + 2, 10).Value = ztdaarr(k, 8)
            .Cells(k + 2, 11).Value = ztdaarr(k, 9)
            .Cells(k + 2, 12).Value = ztdaarr(k, 10)
            
            'if the credit qty is >3 then put an "X" marker in the column
            If ztdaarr(k, 9) > 3 Then
                .Cells(k + 2, 13).Value = "X"
            End If
            
            'if credit value is > Â£50 then put an "X" marker in the column
            If ztdaarr(k, 6) > 50 Then
                .Cells(k + 2.14).Value = "X"
            End If
        
        Next k
        .Activate
        Sheet19.Visible = xlSheetHidden
        
    End With
     
skip:
    Call investigate
    Call per_chamber
    
    Application.ScreenUpdating = True
    Application.Calculation = xlAutomatic

End Sub


Sub text_to_columns()

Dim x As Long

'Count the number of non blank cells in column B
x = Application.WorksheetFunction.CountA(Range("B:B"))

'If column B is empty, text-to-column A, if it's already done (B contains values) then skip this step
    If x > 0 Then
    
    Columns(1).TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, _
        1), Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), Array(10, 1), Array(11, 1), Array(12 _
        , 1), Array(13, 1), Array(14, 1)), TrailingMinusNumbers:=True
       
        Range("B6").TextToColumns Destination:=Range("B2"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=False
        
    End If
    
End Sub

Sub investigate()

Dim x As Long, lastrow As Long, temp_val As Long
Dim prod_treshold As Long, route_treshold As Long

With Sheet6

    'exit if there is no data
    If .Cells(3, 3).Value = vbNullString Then
        MsgBox ("There is no data.")
        Exit Sub
    End If
    
    'fetch tresholds for investigation
    prod_treshold = Mid(.Cells(2, 15).Value, 2, Len(.Cells(2, 15).Value) - 1)
    route_treshold = Mid(.Cells(2, 16).Value, 2, Len(.Cells(2, 16).Value) - 1)

    'total number of rows in the report
    lastrow = .Cells(Rows.Count, 2).End(xlUp).Row
    
    'cycle all rows in the report starting from row 3 [header takes up 2 top rows]
    For x = 3 To lastrow
    
        'calculate how many items this route had credited in total
        temp_val = Application.WorksheetFunction.SumIf(.Range(.Cells(3, 4), .Cells(lastrow, 4)), .Cells(x, 4).Value, .Range(.Cells(3, 11), .Cells(lastrow, 11)))
        'mark with an "X" if the route had over 10 items credited
        If temp_val > route_treshold Then
            .Cells(x, 16).Value = "X"
        End If
        
        'calculate how many items this product was credited across all depots
        temp_val = Application.WorksheetFunction.SumIf(.Range(.Cells(3, 9), .Cells(lastrow, 9)), .Cells(x, 9).Value, .Range(.Cells(3, 11), .Cells(lastrow, 11)))
        'mark with an "X" if the product was credited for over 10 items across all depots
        If temp_val > prod_treshold Then
            .Cells(x, 15).Value = "X"
        End If
        
        If .Cells(x, 13).Value = "X" Or .Cells(x, 14).Value = "X" Or .Cells(x, 15).Value = "X" Or .Cells(x, 16).Value = "X" Then
            .Cells(x, 17).Value = "INVESTIGATE"
        End If
    
    Next x
    
    Rows("2:2").AutoFilter
    ActiveSheet.Range("$A$2:$BCY$" & lastrow).AutoFilter Field:=17, Criteria1:="INVESTIGATE"

End With

End Sub

Sub per_chamber()
'LOOKUPS tab, procedure to substitute all formulas to minimise recalc time

Dim x As Long, y As Long, z As Long, k As Long, lastrow_sums As Long, lastrow_vl06 As Long, lastrow_ztda As Long
Dim data_arr() As Variant, temp_reg As String, temp_val_vl06 As Long, temp_val_51s As Long, temp_val_55s As Long
Dim temp_val_57s As Long, temp_val_errval As Double, temp_val_invest As Long, temp_val_ztda As Long
Dim temp_chamb As String, temp_condi As String
Dim goto_row As Long

'data_arr array row counter
y = 1

With Sheet3

    'Scoop chamber numbers from the table
    lastrow_sums = .Cells(Rows.Count, 10).End(xlUp).Row
    ReDim data_arr(1 To lastrow_sums, 1 To 9) As Variant
    'Table structure:
    '(1)chamber / (2)vl06 cases count / (3)ztda error / (4)51-errors / (5)55-errors /
    '(6)57-errors / (7)value of errors / (8)number of investigations / (9) region
    
    
    '###########################(1) Chamber
    For x = 1 To lastrow_sums
    
        If Right(.Cells(x, 10).Value, 2) = "10" Then
            'populate 1st column in the array with chamber numbers
            data_arr(y, 1) = .Cells(x, 11).Value
            y = y + 1
        
        End If
    
    Next x
    y = 1
    x = 1
    '###########################(9) Region
    'Scoop region per chamber for later summaries per region, table next door
    lastrow_sums = .Cells(Rows.Count, 9).End(xlUp).Row
    
    For y = 1 To UBound(data_arr, 1)
    
        For x = 1 To lastrow_sums
            'match first 2 letters in depot and chamber number
            If Left(.Cells(x, 9).Value, 2) = Left(data_arr(y, 1), 2) Then
                data_arr(y, 9) = .Cells(x, 8).Value
            End If
            
        Next x
    
    Next y
    x = 1
    y = 1
    
End With
    
With Sheet7

    '###########################(2) VL06 case count per chamber
    'TOO SLOW
    lastrow_vl06 = .Cells(Rows.Count, 10).End(xlUp).Row
    
    For y = 1 To UBound(data_arr, 1)
        '### (2)
        data_arr(y, 2) = Application.WorksheetFunction.SumIf(.Range(.Cells(4, 10), .Cells(lastrow_vl06, 10)), data_arr(y, 1), .Range(.Cells(4, 13), .Cells(lastrow_vl06, 13)))
        
    Next y
    y = 1
    
    .Cells.ClearContents
    .Visible = xlSheetHidden
    
End With

With Sheet6

    '###########################(3) ZTDA count per chamber / (4) 51's / (5) 55's / (6) 57's / (7) Value per chamber / (8) Investigations
    
    lastrow_ztda = .Cells(Rows.Count, 2).End(xlUp).Row
    
    For y = 1 To UBound(data_arr, 1)
        '### (3)
        data_arr(y, 3) = Application.WorksheetFunction.SumIf(.Range(.Cells(3, 5), .Cells(lastrow_ztda, 5)), data_arr(y, 1), .Range(.Cells(3, 11), .Cells(lastrow_ztda, 11)))
        x = 3
        For x = 3 To lastrow_ztda
            '### (4) 51's
            If .Cells(x, 5).Value = data_arr(y, 1) And .Cells(x, 12).Value = 51 Then
                data_arr(y, 4) = data_arr(y, 4) + .Cells(x, 11).Value
            End If
            '### (5)55's
            If .Cells(x, 5).Value = data_arr(y, 1) And .Cells(x, 12).Value = 55 Then
                data_arr(y, 5) = data_arr(y, 5) + .Cells(x, 11).Value
            End If
            '### (6) 57's
            If .Cells(x, 5).Value = data_arr(y, 1) And .Cells(x, 12).Value = 57 Then
                data_arr(y, 6) = data_arr(y, 6) + .Cells(x, 11).Value
            End If
            '### (7) Value
            If .Cells(x, 5).Value = data_arr(y, 1) Then
                data_arr(y, 7) = data_arr(y, 7) + .Cells(x, 8).Value
            End If
            '### (8) Number of investigations per chamber
            If .Cells(x, 5).Value = data_arr(y, 1) And .Cells(x, 17).Value = "INVESTIGATE" Then
                data_arr(y, 8) = data_arr(y, 8) + 1
            End If
        Next x
    Next y
    y = 1
    x = 1
    
End With

With Sheet3

    lastrow = .Cells(Rows.Count, 11).End(xlUp).Row
    
    'Clear table before printing data in
    .Range(.Cells(2, 12), .Cells(lastrow, 18)).ClearContents
    
    'Print data for each chamber onto the sheet
    For y = 1 To UBound(data_arr, 1)
        If data_arr(y, 1) <> Empty Then
            goto_row = Application.WorksheetFunction.Match(data_arr(y, 1), .Range(.Cells(1, 11), .Cells(lastrow, 11)), 0)
            If Trim(.Cells(goto_row, 11).Value) = data_arr(y, 1) Then
                For z = 2 To UBound(data_arr, 2) - 1
                    If data_arr(y, z) <> Empty Then
                        .Cells(goto_row, 10 + z).Value = data_arr(y, z)
                    Else
                        .Cells(goto_row, 10 + z).Value = 0
                    End If
                Next z
            End If
        End If
    Next y
    y = 1
    
    'Look for regional summaries and calculate
    For x = 1 To lastrow
        
                If InStr(.Cells(x, 11).Value, " ") > 0 Then
                
                    If Left(.Cells(x, 11).Value, InStr(.Cells(x, 11).Value, " ") - 1) = "BRAKES" Then
                    
                        temp_reg = Left(.Cells(x, 11).Value, InStr(.Cells(x, 11).Value, " ") - 1)
                        temp_chamb = Right(.Cells(x, 11).Value, Len(.Cells(x, 11).Value) - InStr(.Cells(x, 11).Value, " "))
                    
                        Select Case temp_chamb
                            Case "L - Frz"
                            temp_condi = "1"
                            Case "R - Frz"
                            temp_condi = "2"
                            Case "L - Chill"
                            temp_condi = "8"
                            Case "R - Chill"
                            temp_condi = "C"
                            Case "L - Amb"
                            temp_condi = "9"
                        End Select
                        
                        For k = 1 To UBound(data_arr, 1)
                            If Right(data_arr(k, 1), 1) = temp_condi Then
                            temp_val_vl06 = temp_val_vl06 + data_arr(k, 2)
                            temp_val_ztda = temp_val_ztda + data_arr(k, 3)
                            temp_val_51s = temp_val_51s + data_arr(k, 4)
                            temp_val_55s = temp_val_55s + data_arr(k, 5)
                            temp_val_57s = temp_val_57s + data_arr(k, 6)
                            temp_val_errval = temp_val_errval + data_arr(k, 7)
                            temp_val_invest = temp_val_invest + data_arr(k, 8)
                            End If
                        Next k
                        k = 1
                    
                        .Cells(x, 12).Value = temp_val_vl06
                        .Cells(x, 13).Value = temp_val_ztda
                        .Cells(x, 14).Value = temp_val_51s
                        .Cells(x, 15).Value = temp_val_55s
                        .Cells(x, 16).Value = temp_val_57s
                        .Cells(x, 17).Value = temp_val_errval
                        .Cells(x, 18).Value = temp_val_invest
                    
                        temp_val_vl06 = 0
                        temp_val_ztda = 0
                        temp_val_51s = 0
                        temp_val_55s = 0
                        temp_val_57s = 0
                        temp_val_errval = 0
                        temp_val_invest = 0
                    Else
                    
                        temp_reg = Left(.Cells(x, 11).Value, InStr(.Cells(x, 11).Value, " ") - 1)
                        temp_chamb = Right(.Cells(x, 11).Value, Len(.Cells(x, 11).Value) - InStr(.Cells(x, 11).Value, " "))
                    
                        Select Case temp_chamb
                            Case "L - Frz"
                            temp_condi = "1"
                            Case "R - Frz"
                            temp_condi = "2"
                            Case "L - Chill"
                            temp_condi = "8"
                            Case "R - Chill"
                            temp_condi = "C"
                            Case "L - Amb"
                            temp_condi = "9"
                        End Select

                        For k = 1 To UBound(data_arr, 1)
                            If data_arr(k, 9) = temp_reg And Right(data_arr(k, 1), 1) = temp_condi Then
                            temp_val_vl06 = temp_val_vl06 + data_arr(k, 2)
                            temp_val_ztda = temp_val_ztda + data_arr(k, 3)
                            temp_val_51s = temp_val_51s + data_arr(k, 4)
                            temp_val_55s = temp_val_55s + data_arr(k, 5)
                            temp_val_57s = temp_val_57s + data_arr(k, 6)
                            temp_val_errval = temp_val_errval + data_arr(k, 7)
                            temp_val_invest = temp_val_invest + data_arr(k, 8)
                            End If
                        Next k
                        k = 1
                    
                        .Cells(x, 12).Value = temp_val_vl06
                        .Cells(x, 13).Value = temp_val_ztda
                        .Cells(x, 14).Value = temp_val_51s
                        .Cells(x, 15).Value = temp_val_55s
                        .Cells(x, 16).Value = temp_val_57s
                        .Cells(x, 17).Value = temp_val_errval
                        .Cells(x, 18).Value = temp_val_invest
                    
                        temp_val_vl06 = 0
                        temp_val_ztda = 0
                        temp_val_51s = 0
                        temp_val_55s = 0
                        temp_val_57s = 0
                        temp_val_errval = 0
                        temp_val_invest = 0
                    
                    End If
                
                End If

        Next x
        
    .Visible = xlSheetHidden
    
End With

End Sub
